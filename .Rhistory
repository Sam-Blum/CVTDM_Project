group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_os_log_cm <- as.data.frame(os_log_cm$table)
plot_os_log_cm$Prediction <- factor(plot_os_log_cm$Prediction, levels=rev(levels(plot_os_log_cm$Prediction)))
plot_os_log_cm <- plot_os_log_cm %>%
mutate(pred = ifelse(plot_os_log_cm$Prediction == plot_os_log_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bayes_cm <- as.data.frame(bayes_cm$table)
plot_bayes_cm$Prediction <- factor(plot_bayes_cm$Prediction, levels=rev(levels(plot_bayes_cm$Prediction)))
plot_bayes_cm <- plot_bayes_cm %>%
mutate(pred = ifelse(plot_bayes_cm$Prediction == plot_bayes_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_pruned_tree1_cm <- as.data.frame(pruned_tree1_cm$table)
plot_pruned_tree1_cm$Prediction <- factor(plot_pruned_tree1_cm$Prediction, levels=rev(levels(plot_pruned_tree1_cm$Prediction)))
plot_pruned_tree1_cm <- plot_pruned_tree1_cm %>%
mutate(pred = ifelse(plot_pruned_tree1_cm$Prediction == plot_pruned_tree1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_boost1_cm <- as.data.frame(boost1_cm$table)
plot_boost1_cm$Prediction <- factor(plot_boost1_cm$Prediction, levels=rev(levels(plot_boost1_cm$Prediction)))
plot_boost1_cm <- plot_boost1_cm %>%
mutate(pred = ifelse(plot_boost1_cm$Prediction == plot_boost1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bag1_cm <- as.data.frame(bag1_cm$table)
plot_bag1_cm$Prediction <- factor(plot_bag1_cm$Prediction, levels=rev(levels(plot_bag1_cm$Prediction)))
plot_bag1_cm <- plot_bag1_cm %>%
mutate(pred = ifelse(plot_bag1_cm$Prediction == plot_bag1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_rf1_cm <- as.data.frame(rf1_cm$table)
plot_rf1_cm$Prediction <- factor(plot_rf1_cm$Prediction, levels=rev(levels(plot_rf1_cm$Prediction)))
plot_rf1_cm <- plot_rf1_cm %>%
mutate(pred = ifelse(plot_rf1_cm$Prediction == plot_rf1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_nn1_cm <- as.data.frame(nn1_cm$table)
plot_nn1_cm$Prediction <- factor(plot_nn1_cm$Prediction, levels=rev(levels(plot_nn1_cm$Prediction)))
plot_nn1_cm <- plot_nn1_cm %>%
mutate(pred = ifelse(plot_nn1_cm$Prediction == plot_nn1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_majority_vote_cm <- as.data.frame(majority_vote_cm$table)
plot_majority_vote_cm$Prediction <- factor(plot_majority_vote_cm$Prediction, levels=rev(levels(plot_majority_vote_cm$Prediction)))
plot_majority_vote_cm <- plot_majority_vote_cm %>%
mutate(pred = ifelse(plot_majority_vote_cm$Prediction == plot_majority_vote_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_mean_prob_cm <- as.data.frame(mean_prob_cm$table)
plot_mean_prob_cm$Prediction <- factor(plot_mean_prob_cm$Prediction, levels=rev(levels(plot_mean_prob_cm$Prediction)))
plot_mean_prob_cm <- plot_mean_prob_cm %>%
mutate(pred = ifelse(plot_mean_prob_cm$Prediction == plot_mean_prob_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_knn_cm <- ggplot(plot_knn_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_knn_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: kNN")
plot_knn_cm
plot_knn_cm
plot_os_log_cm <- ggplot(plot_os_log_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_os_log_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Logistic Regression")
plot_bayes_cm <- ggplot(plot_bayes_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bayes_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Naive Bayes")
plot_grid(plot_knn_cm, plot_os_log_cm, plot_bayes_cm)
plot_grid(plot_knn_cm, plot_os_log_cm, align = "v")
plot_grid(plot_knn_cm, plot_os_log_cm, align = "hv")
plot_grid(plot_knn_cm, plot_os_log_cm, align = "h")
plot_knn_cm <- as.data.frame(best_knn_cm$table)
plot_knn_cm$Prediction <- factor(plot_knn_cm$Prediction, levels=rev(levels(plot_knn_cm$Prediction)))
plot_knn_cm <- plot_knn_cm %>%
mutate(pred = ifelse(plot_knn_cm$Prediction == plot_knn_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_os_log_cm <- as.data.frame(os_log_cm$table)
plot_os_log_cm$Prediction <- factor(plot_os_log_cm$Prediction, levels=rev(levels(plot_os_log_cm$Prediction)))
plot_os_log_cm <- plot_os_log_cm %>%
mutate(pred = ifelse(plot_os_log_cm$Prediction == plot_os_log_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bayes_cm <- as.data.frame(bayes_cm$table)
plot_bayes_cm$Prediction <- factor(plot_bayes_cm$Prediction, levels=rev(levels(plot_bayes_cm$Prediction)))
plot_bayes_cm <- plot_bayes_cm %>%
mutate(pred = ifelse(plot_bayes_cm$Prediction == plot_bayes_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_pruned_tree1_cm <- as.data.frame(pruned_tree1_cm$table)
plot_pruned_tree1_cm$Prediction <- factor(plot_pruned_tree1_cm$Prediction, levels=rev(levels(plot_pruned_tree1_cm$Prediction)))
plot_pruned_tree1_cm <- plot_pruned_tree1_cm %>%
mutate(pred = ifelse(plot_pruned_tree1_cm$Prediction == plot_pruned_tree1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_boost1_cm <- as.data.frame(boost1_cm$table)
plot_boost1_cm$Prediction <- factor(plot_boost1_cm$Prediction, levels=rev(levels(plot_boost1_cm$Prediction)))
plot_boost1_cm <- plot_boost1_cm %>%
mutate(pred = ifelse(plot_boost1_cm$Prediction == plot_boost1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bag1_cm <- as.data.frame(bag1_cm$table)
plot_bag1_cm$Prediction <- factor(plot_bag1_cm$Prediction, levels=rev(levels(plot_bag1_cm$Prediction)))
plot_bag1_cm <- plot_bag1_cm %>%
mutate(pred = ifelse(plot_bag1_cm$Prediction == plot_bag1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_rf1_cm <- as.data.frame(rf1_cm$table)
plot_rf1_cm$Prediction <- factor(plot_rf1_cm$Prediction, levels=rev(levels(plot_rf1_cm$Prediction)))
plot_rf1_cm <- plot_rf1_cm %>%
mutate(pred = ifelse(plot_rf1_cm$Prediction == plot_rf1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_nn1_cm <- as.data.frame(nn1_cm$table)
plot_nn1_cm$Prediction <- factor(plot_nn1_cm$Prediction, levels=rev(levels(plot_nn1_cm$Prediction)))
plot_nn1_cm <- plot_nn1_cm %>%
mutate(pred = ifelse(plot_nn1_cm$Prediction == plot_nn1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_majority_vote_cm <- as.data.frame(majority_vote_cm$table)
plot_majority_vote_cm$Prediction <- factor(plot_majority_vote_cm$Prediction, levels=rev(levels(plot_majority_vote_cm$Prediction)))
plot_majority_vote_cm <- plot_majority_vote_cm %>%
mutate(pred = ifelse(plot_majority_vote_cm$Prediction == plot_majority_vote_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_mean_prob_cm <- as.data.frame(mean_prob_cm$table)
plot_mean_prob_cm$Prediction <- factor(plot_mean_prob_cm$Prediction, levels=rev(levels(plot_mean_prob_cm$Prediction)))
plot_mean_prob_cm <- plot_mean_prob_cm %>%
mutate(pred = ifelse(plot_mean_prob_cm$Prediction == plot_mean_prob_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_knn_cm <- ggplot(plot_knn_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_knn_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: kNN")
plot_knn_cm
plot_os_log_cm <- ggplot(plot_os_log_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_os_log_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Logistic Regression")
plot_os_log_cm
plot_bayes_cm <- ggplot(plot_bayes_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bayes_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Naive Bayes")
plot_bayes_cm
plot_pruned_tree1_cm <- ggplot(plot_pruned_tree1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_pruned_tree1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Pruned Tree")
plot_pruned_tree1_cm
plot_boost1_cm <- ggplot(plot_boost1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_boost1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Boosted Tree")
plot_boost1_cm
plot_bag1_cm <- ggplot(plot_bag1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bag1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Bagged Tree")
plot_bag1_cm
plot_rf1_cm <- ggplot(plot_rf1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_rf1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Random Forest")
plot_nn1_cm <- ggplot(plot_nn1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_nn1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Neural Net")
plot_nn1_cm
plot_majority_vote_cm <- ggplot(plot_majority_vote_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_majority_vote_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Majority Vote (Ensembles)")
plot_majority_vote_cm
plot_mean_prob_cm <- ggplot(plot_mean_prob_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_mean_prob_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Mean Probability (Ensembles)")
plot_mean_prob_cm
plot_knn_cm <- as.data.frame(best_knn_cm$table)
plot_knn_cm$Prediction <- factor(plot_knn_cm$Prediction, levels=rev(levels(plot_knn_cm$Prediction)))
plot_knn_cm <- plot_knn_cm %>%
mutate(pred = ifelse(plot_knn_cm$Prediction == plot_knn_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_os_log_cm <- as.data.frame(os_log_cm$table)
plot_os_log_cm$Prediction <- factor(plot_os_log_cm$Prediction, levels=rev(levels(plot_os_log_cm$Prediction)))
plot_os_log_cm <- plot_os_log_cm %>%
mutate(pred = ifelse(plot_os_log_cm$Prediction == plot_os_log_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bayes_cm <- as.data.frame(bayes_cm$table)
plot_bayes_cm$Prediction <- factor(plot_bayes_cm$Prediction, levels=rev(levels(plot_bayes_cm$Prediction)))
plot_bayes_cm <- plot_bayes_cm %>%
mutate(pred = ifelse(plot_bayes_cm$Prediction == plot_bayes_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_pruned_tree1_cm <- as.data.frame(pruned_tree1_cm$table)
plot_pruned_tree1_cm$Prediction <- factor(plot_pruned_tree1_cm$Prediction, levels=rev(levels(plot_pruned_tree1_cm$Prediction)))
plot_pruned_tree1_cm <- plot_pruned_tree1_cm %>%
mutate(pred = ifelse(plot_pruned_tree1_cm$Prediction == plot_pruned_tree1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_boost1_cm <- as.data.frame(boost1_cm$table)
plot_boost1_cm$Prediction <- factor(plot_boost1_cm$Prediction, levels=rev(levels(plot_boost1_cm$Prediction)))
plot_boost1_cm <- plot_boost1_cm %>%
mutate(pred = ifelse(plot_boost1_cm$Prediction == plot_boost1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bag1_cm <- as.data.frame(bag1_cm$table)
plot_bag1_cm$Prediction <- factor(plot_bag1_cm$Prediction, levels=rev(levels(plot_bag1_cm$Prediction)))
plot_bag1_cm <- plot_bag1_cm %>%
mutate(pred = ifelse(plot_bag1_cm$Prediction == plot_bag1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_rf1_cm <- as.data.frame(rf1_cm$table)
plot_rf1_cm$Prediction <- factor(plot_rf1_cm$Prediction, levels=rev(levels(plot_rf1_cm$Prediction)))
plot_rf1_cm <- plot_rf1_cm %>%
mutate(pred = ifelse(plot_rf1_cm$Prediction == plot_rf1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_nn1_cm <- as.data.frame(nn1_cm$table)
plot_nn1_cm$Prediction <- factor(plot_nn1_cm$Prediction, levels=rev(levels(plot_nn1_cm$Prediction)))
plot_nn1_cm <- plot_nn1_cm %>%
mutate(pred = ifelse(plot_nn1_cm$Prediction == plot_nn1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_majority_vote_cm <- as.data.frame(majority_vote_cm$table)
plot_majority_vote_cm$Prediction <- factor(plot_majority_vote_cm$Prediction, levels=rev(levels(plot_majority_vote_cm$Prediction)))
plot_majority_vote_cm <- plot_majority_vote_cm %>%
mutate(pred = ifelse(plot_majority_vote_cm$Prediction == plot_majority_vote_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_mean_prob_cm <- as.data.frame(mean_prob_cm$table)
plot_mean_prob_cm$Prediction <- factor(plot_mean_prob_cm$Prediction, levels=rev(levels(plot_mean_prob_cm$Prediction)))
plot_mean_prob_cm <- plot_mean_prob_cm %>%
mutate(pred = ifelse(plot_mean_prob_cm$Prediction == plot_mean_prob_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_knn_cm <- ggplot(plot_knn_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_knn_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: kNN")
plot_knn_cm
plot_os_log_cm <- ggplot(plot_os_log_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_os_log_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Logistic Regression")
plot_os_log_cm
plot_bayes_cm <- ggplot(plot_bayes_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bayes_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Naive Bayes")
plot_bayes_cm
plot_pruned_tree1_cm <- ggplot(plot_pruned_tree1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_pruned_tree1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Pruned Tree")
plot_pruned_tree1_cm
plot_boost1_cm <- ggplot(plot_boost1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_boost1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Boosted Tree")
plot_boost1_cm
plot_bag1_cm <- ggplot(plot_bag1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bag1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Bagged Tree")
plot_bag1_cm
plot_rf1_cm <- ggplot(plot_rf1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_rf1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Random Forest")
plot_rf1_cm
plot_nn1_cm <- ggplot(plot_nn1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_nn1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Neural Net")
plot_nn1_cm
plot_majority_vote_cm <- ggplot(plot_majority_vote_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_majority_vote_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Majority Vote (Ensembles)")
plot_majority_vote_cm
plot_mean_prob_cm <- ggplot(plot_mean_prob_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_mean_prob_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Mean Probability (Ensembles)")
plot_mean_prob_cm
par = mfrow (3,4)
par(mfrow = c(3,4))
plot_knn_cm <- ggplot(plot_knn_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_knn_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: kNN")
plot_knn_cm <- as.data.frame(best_knn_cm$table)
plot_knn_cm$Prediction <- factor(plot_knn_cm$Prediction, levels=rev(levels(plot_knn_cm$Prediction)))
plot_knn_cm <- plot_knn_cm %>%
mutate(pred = ifelse(plot_knn_cm$Prediction == plot_knn_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_os_log_cm <- as.data.frame(os_log_cm$table)
plot_os_log_cm$Prediction <- factor(plot_os_log_cm$Prediction, levels=rev(levels(plot_os_log_cm$Prediction)))
plot_os_log_cm <- plot_os_log_cm %>%
mutate(pred = ifelse(plot_os_log_cm$Prediction == plot_os_log_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bayes_cm <- as.data.frame(bayes_cm$table)
plot_bayes_cm$Prediction <- factor(plot_bayes_cm$Prediction, levels=rev(levels(plot_bayes_cm$Prediction)))
plot_bayes_cm <- plot_bayes_cm %>%
mutate(pred = ifelse(plot_bayes_cm$Prediction == plot_bayes_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_pruned_tree1_cm <- as.data.frame(pruned_tree1_cm$table)
plot_pruned_tree1_cm$Prediction <- factor(plot_pruned_tree1_cm$Prediction, levels=rev(levels(plot_pruned_tree1_cm$Prediction)))
plot_pruned_tree1_cm <- plot_pruned_tree1_cm %>%
mutate(pred = ifelse(plot_pruned_tree1_cm$Prediction == plot_pruned_tree1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_boost1_cm <- as.data.frame(boost1_cm$table)
plot_boost1_cm$Prediction <- factor(plot_boost1_cm$Prediction, levels=rev(levels(plot_boost1_cm$Prediction)))
plot_boost1_cm <- plot_boost1_cm %>%
mutate(pred = ifelse(plot_boost1_cm$Prediction == plot_boost1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_bag1_cm <- as.data.frame(bag1_cm$table)
plot_bag1_cm$Prediction <- factor(plot_bag1_cm$Prediction, levels=rev(levels(plot_bag1_cm$Prediction)))
plot_bag1_cm <- plot_bag1_cm %>%
mutate(pred = ifelse(plot_bag1_cm$Prediction == plot_bag1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_rf1_cm <- as.data.frame(rf1_cm$table)
plot_rf1_cm$Prediction <- factor(plot_rf1_cm$Prediction, levels=rev(levels(plot_rf1_cm$Prediction)))
plot_rf1_cm <- plot_rf1_cm %>%
mutate(pred = ifelse(plot_rf1_cm$Prediction == plot_rf1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_nn1_cm <- as.data.frame(nn1_cm$table)
plot_nn1_cm$Prediction <- factor(plot_nn1_cm$Prediction, levels=rev(levels(plot_nn1_cm$Prediction)))
plot_nn1_cm <- plot_nn1_cm %>%
mutate(pred = ifelse(plot_nn1_cm$Prediction == plot_nn1_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_majority_vote_cm <- as.data.frame(majority_vote_cm$table)
plot_majority_vote_cm$Prediction <- factor(plot_majority_vote_cm$Prediction, levels=rev(levels(plot_majority_vote_cm$Prediction)))
plot_majority_vote_cm <- plot_majority_vote_cm %>%
mutate(pred = ifelse(plot_majority_vote_cm$Prediction == plot_majority_vote_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
plot_mean_prob_cm <- as.data.frame(mean_prob_cm$table)
plot_mean_prob_cm$Prediction <- factor(plot_mean_prob_cm$Prediction, levels=rev(levels(plot_mean_prob_cm$Prediction)))
plot_mean_prob_cm <- plot_mean_prob_cm %>%
mutate(pred = ifelse(plot_mean_prob_cm$Prediction == plot_mean_prob_cm$Reference, "correct", "error")) %>%
group_by(Reference) %>%
mutate(prop = Freq/sum(Freq))
par(mfrow = c(3,4))
plot_knn_cm <- ggplot(plot_knn_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_knn_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: kNN")
plot_knn_cm
plot_os_log_cm <- ggplot(plot_os_log_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_os_log_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Logistic Regression")
plot_os_log_cm
plot_bayes_cm <- ggplot(plot_bayes_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bayes_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Naive Bayes")
plot_bayes_cm
plot_pruned_tree1_cm <- ggplot(plot_pruned_tree1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_pruned_tree1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Pruned Tree")
plot_pruned_tree1_cm
plot_boost1_cm <- ggplot(plot_boost1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_boost1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Boosted Tree")
plot_boost1_cm
plot_bag1_cm <- ggplot(plot_bag1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_bag1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Bagged Tree")
plot_bag1_cm
plot_rf1_cm <- ggplot(plot_rf1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_rf1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Random Forest")
plot_rf1_cm
plot_nn1_cm <- ggplot(plot_nn1_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_nn1_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Neural Net")
plot_nn1_cm
plot_majority_vote_cm <- ggplot(plot_majority_vote_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_majority_vote_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Majority Vote (Ensembles)")
plot_majority_vote_cm
plot_mean_prob_cm <- ggplot(plot_mean_prob_cm, aes(Reference, Prediction, fill = pred, alpha = prop)) +
geom_tile() +
theme_bw() +
geom_text(aes(label=Freq), vjust = .5, fontface  = "bold", alpha = 1) +
scale_fill_manual(values = c(correct = "#5DADE2", error = "#EC7063")) +
xlim((levels(plot_mean_prob_cm$Reference))) +
labs(x = "Reference",y = "Prediction", title = "Confusion Matrix: Mean Probability (Ensembles)")
plot_mean_prob_cm
